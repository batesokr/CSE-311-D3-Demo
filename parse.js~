    var owner = 'Owner/Category';
    var type = 'Type';

    var histogram_owner = {};
    var histogram_type = {};

// Use AJAX to get the CSV file
$.get("get_csv.php", function(csv_file) {
    // Associate array to keep track of categories

    // Parse the CSV file step by step
    Papa.parse(csv_file, {
	header: true,
	step: function(row) {
	    update_histogram(row, owner, histogram_owner);
	    update_histogram(row, type, histogram_type);
	},
	complete: function(results) {
	    create_bar_chart('.chart_owner', histogram_owner);
	//    create_bar_chart('.chart_type', histogram_type);
	}
    });
});

// Updates a histogram
function update_histogram(row, category_name, histogram){
    // Add each category to an associate array to count
    var category = row.data[0][category_name];
    if(category.trim().length != 0){
	if(isNaN(histogram[category])) {
	    histogram[category] = 1;
	} else {
	    histogram[category]++;
	}	
    }
}


 var margin, width, height, x, y, xAxis, yAxis;
// Creates a chart based of a histogram
function create_bar_chart(chart_dom, histogram){
    // Obtain the keys and the maximum value
    var x_keys = [];
    $.each(histogram, function(key) { x_keys.push(key); });   
    var x_max = d3.max(x_keys, function(key) { return histogram[key]; });

    // parameters used for creation of the chart
    var margin = {top: 50, 
		  right: 30, 
		  bottom: 30, 
		  left: 60};    
    var width = x_max * 4 - margin.right - margin.left;
    var height = x_keys.length * 20 - margin.top - margin.bottom;

    // The x and y domain/range
    var x = d3.scale.linear()
	.range([0, width])
	.domain([0, x_max]);

    var y = d3.scale.ordinal()
	.rangeRoundBands([0,height], .1)
	.domain(x_keys);

    var xAxis = d3.svg.axis()
	.scale(x)
	.orient('top')
	.ticks(Math.ceil(x_max/10));
 
    var yAxis = d3.svg.axis()
	.scale(y)
	.orient('right')
	.tickSize([0.1,0.1]);

    // Create a bar chart
    var chart = d3.select(chart_dom)
	.attr('width', width + margin.left + margin.right)
	.attr('height', height + margin.top + margin.bottom)
	.append('g')
	.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');
    
    // Create the bars
    var bar = chart.selectAll('.bar')
	.data(x_keys)
	.enter().append('g')
	.attr('transform', function(d, i) { return 'translate(0,' + y(d) + ')'; });

    bar.append('rect')
	.attr('class', 'bar')
	.attr('width', function(d) { return x(histogram[d]); })
	.attr('height', y.rangeBand());

   // Append the x-axis
//    chart.append('g')
//	.attr('class', 'x-axis')
//	.call(xAxis);

    // Append the y-axis
    chart.append('g')
	.attr('class', 'y-axis')
	.call(yAxis);
}